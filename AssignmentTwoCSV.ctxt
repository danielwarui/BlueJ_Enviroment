#BlueJ class context
comment0.params=
comment0.target=void\ testAverageTemperatureWithHighHumidityInFile()
comment1.params=parser\ value
comment1.target=double\ averageTemperatureWithHighHumidityInFile(org.apache.commons.csv.CSVParser,\ int)
comment10.params=
comment10.target=java.lang.String\ fileWithlowestHumidity()
comment11.params=
comment11.target=java.lang.String\ fileWithColdestTemperature()
comment12.params=
comment12.target=void\ testFileWithColdestTemperature()
comment13.params=parser
comment13.target=org.apache.commons.csv.CSVRecord\ coldestHourInFile(org.apache.commons.csv.CSVParser)
comment14.params=currentRow\ coolestSoFar
comment14.target=org.apache.commons.csv.CSVRecord\ getCoolerOfTwo(org.apache.commons.csv.CSVRecord,\ org.apache.commons.csv.CSVRecord)
comment15.params=
comment15.target=void\ testColdestHourInFile()
comment15.text=Working\ Okay\ no\ need\ to\ modify
comment2.params=parser
comment2.target=double\ averageTemperatureInFile(org.apache.commons.csv.CSVParser)
comment3.params=sum\ noOfEntries
comment3.target=double\ findAverage(double,\ int)
comment4.params=
comment4.target=void\ testAverageTemperatureInFile()
comment5.params=
comment5.target=void\ testLowestHumidityInFile()
comment6.params=parser
comment6.target=org.apache.commons.csv.CSVRecord\ lowestHumidityInFile(org.apache.commons.csv.CSVParser)
comment7.params=value
comment7.target=int\ tryParseInt(java.lang.String)
comment8.params=currentRow\ lowestSoFar
comment8.target=org.apache.commons.csv.CSVRecord\ lowerHumididtyOfTwo(org.apache.commons.csv.CSVRecord,\ org.apache.commons.csv.CSVRecord)
comment9.params=
comment9.target=void\ testFileWithLowestHumidity()
numComments=16
